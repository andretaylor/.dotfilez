#!/bin/zsh

# --------------------------------------------------------------------
# This function, gcl, clones a git repository and changes the
# directory to the cloned repository. It supports various
# repository URI formats such as ssh, git, ftp, http, and https.
# If the cloning process fails, the function exits. If the last
# argument passed is a directory, it changes to that directory.
# Otherwise, it parses the repository URI and changes to the
# directory named after the repository.
#
# Example:
#   gcl https://github.com/user/repo.git
#   gcl git@github.com:user/repo.git
#   gcl https://github.com/user/repo.git target_directory
# --------------------------------------------------------------------

function gcl() {
  setopt localoptions extendedglob

  # Find the repository URL from arguments
  local repo_url=""
  local target_dir=""

  # Check each argument for a valid git URL pattern
  for arg in "$@"; do
    if [[ "$arg" =~ ^(https?://|git://|ssh://|ftp://|ftps://|.*@.*:) ]]; then
      repo_url="$arg"
    fi
  done

  # If no URL found, assume first argument is the URL
  if [[ -z "$repo_url" ]]; then
    repo_url="$1"
  fi

  # Clone repository and exit if it fails
  command git clone --recurse-submodules "$@" || return

  # Determine target directory
  if [[ -d "${@[-1]}" ]]; then
    # Last argument is an existing directory
    target_dir="${@[-1]}"
  else
    # Extract directory name from repo URL
    local basename="${repo_url:t}"  # Get basename
    target_dir="${basename%.git}"    # Remove .git extension
  fi

  # Change to the target directory if it exists
  if [[ -d "$target_dir" ]]; then
    cd "$target_dir"
  else
    echo "Warning: Could not determine target directory"
  fi
}
compdef _git gcl=git-clone